# For this pod to work the following assumptions are made
# - A key vault exists with 2 secrets by name username and password. key_vault_name is required below
# - key_vault_secrets_provider_enabled = true. This will create a managed identity whose client_id is needed below

apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: azure-kvname-user-msi
spec:
  provider: azure
  # This will create a kubernetes resource - secret by the name `testsecret` with data having 1 key `username-env`
  # The key will be referred by pods/deployments
  # the secret will be auto-created when there is any pod mounted that would need this secret and auto deleted when there are no pods referring to it
  secretObjects:
    - secretName: testsecret
      type: Opaque
      data:
        - objectName: username
          key: username-env
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "true"          # Set to true for using managed identity
    userAssignedIdentityID: "8ec434f8-3f68-410c-9038-405cb9a2f822"   # Set the clientID of the user-assigned managed identity to use
    keyvaultName: "dso-kube-7839299630"        # Set to the name of your key vault
    cloudName: ""                         # [OPTIONAL for Azure] if not provided, the Azure environment defaults to AzurePublicCloud
    objects:  |
      array:
        - |
          objectName: username
          objectType: secret              # object types: secret, key, or cert
          objectVersion: ""               # [OPTIONAL] object versions, default to latest if empty
    tenantId: "c5836784-c046-4f73-9e7e-9c370262e295"                # The tenant ID of the key vault
