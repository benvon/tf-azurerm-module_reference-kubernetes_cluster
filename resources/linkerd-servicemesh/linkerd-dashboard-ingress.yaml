apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: web-ingress-auth
  namespace: linkerd-viz
data:
  auth: YWRtaW46JGFwcjEkbjdDdTZnSGwkRTQ3b2dmN0NPOE5SWWpFakJPa1dNLgoK
---
# apiVersion: networking.k8s.io/v1beta1 # for k8s < v1.19
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-ingress
  namespace: linkerd-viz
  annotations:
    nginx.ingress.kubernetes.io/upstream-vhost: $service_name.$namespace.svc.cluster.local:8084
#    nginx.ingress.kubernetes.io/configuration-snippet: |
#      proxy_set_header Origin "";
#      proxy_hide_header l5d-remote-ip;
#      proxy_hide_header l5d-server-id;
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: web-ingress-auth # pragma: allowlist secret
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    cert-manager.io/cluster-issuer: "letsencrypt-cluster"
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  ingressClassName: public-ingress
  tls:
    - hosts:
        - dashboard.sandbox.launch.dresdencraft.com
      secretName: demo-hello-world-ingress-public-tls # pragma: allowlist secret
  rules:
    - host: dashboard.sandbox.launch.dresdencraft.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web
                port:
                  number: 8084
